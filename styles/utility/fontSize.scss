@use 'styles/variable' as var;
@use 'styles/common/mixin/' as mixin;
@use 'styles/common/extend/' as *;
@use 'styles/common/function/' as func;

// font-size
// ---------------------------------------------------------------------------
// Narrow Viewport
@include mixin.media-query($range: below) {
    .fontSize {
        &-xxs {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW - 6) !important;
        }

        &-xs {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW - 4) !important;
        }

        &-sm {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW - 2) !important;
        }

        &-md {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW) !important;
        }

        &-lg {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW + 2) !important;
        }

        &-xl {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW + 4) !important;
        }

        &-xxl {
            font-size: func.px-to-rem(var.$FONT_SIZE_NARROW + 6) !important;
        }
    }
}


// Wide Viewport
@include mixin.media-query {
    .u-fontSize {
        &-xxs {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE - 6) !important;
        }

        &-xs {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE - 4) !important;
        }

        &-sm {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE - 2) !important;
        }

        &-md {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE) !important;
        }

        &-lg {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE + 2) !important;
        }

        &-xl {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE + 4) !important;
        }

        &-xxl {
            font-size: func.px-to-rem(var.$FONT_SIZE_WIDE + 6) !important;
        }
    }
}
